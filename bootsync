#!/usr/bin/bash
# vim:set ts=3:

set -e

shopt -s lastpipe

TEMPDIR=''
function cleanup { [[ -n "$TEMPDIR" ]] && rm -rf $TEMPDIR; }
trap cleanup exit

if ! mountpoint -q ${ESP_ROOT}; then
	echo "${ESP_ROOT} is not a mountpoint, aborting..." 1>&2
	exit 1
fi

if ! [[ -d ${ESP_ROOT}/loader ]]; then
	echo "directory ${ESP_ROOT}/loader not found, aborting..." 1>&2
	exit 1
fi

read MACHINE_ID < /etc/machine-id
if [[ -z $MACHINE_ID ]]; then
	echo "file /etc/machine-id is empty, aborting..." 1>&2
	exit 1
fi

ls -v /lib/modules | tail -n 1 | read LASTKRN
if ! [[ -e ${ESP_ROOT}/$MACHINE_ID/$LASTKRN ]]; then
	echo "$MACHINE_ID/$LASTKRN not found under ${ESP_ROOT}, aborting..." 1>&2
	exit 1
fi

findmnt -n -l --output source ${ESP_ROOT} | read SRC
findmnt -n -l --output target $SRC | grep -m 1 "^${ESP_ROOT}@[a-z]$" | read TGT
if [[ -z $TGT ]]; then
	echo "${ESP_ROOT} does not appear to be a bind mount of ${ESP_ROOT}@[a-z], aborting..." 1>&2
	exit 1
fi

if [[ -t 1 ]]; then
	VERBOSITY='-v'
else
	VERBOSITY='-q'
fi

mktemp -d | read TEMPDIR
touch $TEMPDIR/$LASTKRN
for m in $(ls -d ${ESP_ROOT}@[a-z]); do
	mountpoint -q $m || continue
	[[ $m == $TGT ]] && continue

	ls -v $m/$MACHINE_ID | tail -n 1 | read LASTESP || :
	touch $TEMPDIR/$LASTESP
	ls -v $TEMPDIR | tail -n 1 | read TESTKRN
	if [[ $TESTKRN != $LASTKRN ]]; then
		echo "newer kernel detected on $m, refusing to update..." 1>&2
		rm $TEMPDIR/$LASTESP
		continue
	fi

	rsync $VERBOSITY -r --delete --include="*/" --include="**$MACHINE_ID**" --exclude="*" ${ESP_ROOT}/ $m
done
